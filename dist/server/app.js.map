{"version":3,"sources":["app.js"],"names":["express","require","mongoose","Promise","config","http","connect","mongo","uri","options","connection","on","err","console","error","process","exit","seedDB","app","server","createServer","socketio","serveClient","env","path","default","startServer","angularFullstack","listen","port","ip","log","get","exports","module"],"mappings":"AAAA;;;;AAIA;;;;;;;;AAEA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACAC,SAASC,OAAT,GAAmBF,QAAQ,UAAR,CAAnB;AACA,IAAIG,SAASH,QAAQ,sBAAR,CAAb;AACA,IAAII,OAAOJ,QAAQ,MAAR,CAAX;;AAEA;AACAC,SAASI,OAAT,CAAiBF,OAAOG,KAAP,CAAaC,GAA9B,EAAmCJ,OAAOG,KAAP,CAAaE,OAAhD;AACAP,SAASQ,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAASC,GAAT,EAAc;AAC5CC,UAAQC,KAAR,CAAc,+BAA+BF,GAA7C;AACAG,UAAQC,IAAR,CAAa,CAAC,CAAd;AACD,CAHD;;AAKA;AACA,IAAIZ,OAAOa,MAAX,EAAmB;AAAEhB,UAAQ,eAAR;AAA2B;;AAEhD;AACA,IAAIiB,MAAMlB,SAAV;AACA,IAAImB,SAASd,KAAKe,YAAL,CAAkBF,GAAlB,CAAb;AACA,IAAIG,WAAWpB,QAAQ,WAAR,EAAqBkB,MAArB,EAA6B;AAC1CG,eAAalB,OAAOmB,GAAP,KAAe,YADc;AAE1CC,QAAM;AAFoC,CAA7B,CAAf;AAIAvB,QAAQ,mBAAR,EAA6BwB,OAA7B,CAAqCJ,QAArC;AACApB,QAAQ,kBAAR,EAA4BwB,OAA5B,CAAoCP,GAApC;AACAjB,QAAQ,UAAR,EAAoBwB,OAApB,CAA4BP,GAA5B;;AAEA;AACA,SAASQ,WAAT,GAAuB;AACrBR,MAAIS,gBAAJ,GAAuBR,OAAOS,MAAP,CAAcxB,OAAOyB,IAArB,EAA2BzB,OAAO0B,EAAlC,EAAsC,YAAW;AACtEjB,YAAQkB,GAAR,CAAY,4CAAZ,EAA0D3B,OAAOyB,IAAjE,EAAuEX,IAAIc,GAAJ,CAAQ,KAAR,CAAvE;AACD,GAFsB,CAAvB;AAGD;;AAED,4BAAaN,WAAb;;AAEA;AACAO,UAAUC,OAAOD,OAAP,GAAiBf,GAA3B","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\nvar express = require('express');\nvar mongoose = require('mongoose');\nmongoose.Promise = require('bluebird');\nvar config = require('./config/environment');\nvar http = require('http');\n\n// Connect to MongoDB\nmongoose.connect(config.mongo.uri, config.mongo.options);\nmongoose.connection.on('error', function(err) {\n  console.error('MongoDB connection error: ' + err);\n  process.exit(-1);\n});\n\n// Populate databases with sample data\nif (config.seedDB) { require('./config/seed'); }\n\n// Setup server\nvar app = express();\nvar server = http.createServer(app);\nvar socketio = require('socket.io')(server, {\n  serveClient: config.env !== 'production',\n  path: '/socket.io-client'\n});\nrequire('./config/socketio').default(socketio);\nrequire('./config/express').default(app);\nrequire('./routes').default(app);\n\n// Start server\nfunction startServer() {\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n  });\n}\n\nsetImmediate(startServer);\n\n// Expose app\nexports = module.exports = app;\n"]}